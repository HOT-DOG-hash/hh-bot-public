# Чуть более полный базовый блок
worker_processes  1;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;

  # Поддержка корректного Connection для WS
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # Бэкенд uvicorn как upstream с keepalive
  upstream backend_web {
    server web:8000;
    keepalive 16;
  }

  server {
    listen 80;
    server_name _;

    # то, что у тебя было
    client_max_body_size 16m;

    # --- Health (оба варианта, чтобы не менять compose) ---
    location = /health {
      return 200 'OK';
      add_header Content-Type text/plain;
    }
    location = /healthz {
      return 200 'ok';
      add_header Content-Type text/plain;
    }

    # --- API -> FastAPI (uvicorn) ---
    # /api/foo -> http://web:8000/foo (сохраняем твоё поведение со слэшем)
    location /api/ {
      proxy_pass http://backend_web/;

      # базовые заголовки
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # WebSocket/HTTP/1.1
      proxy_http_version 1.1;
      proxy_set_header Upgrade    $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      # адекватные таймауты
      proxy_connect_timeout 10s;
      proxy_send_timeout    60s;
      proxy_read_timeout    60s;

      # Не ломать Location в ответах бэкенда
      proxy_redirect off;
    }

    # --- Admin static ---
    location /admin/ {
      root /usr/share/nginx/html;
      try_files $uri $uri/ /admin/index.html;

      # Небольшой кеш для статики
      location ~* \.(?:css|js|png|jpg|jpeg|gif|ico|svg|woff2?|ttf)$ {
        expires 1h;
        add_header Cache-Control "public, max-age=3600, immutable";
        try_files $uri =404;
      }
    }

    # (опционально) дефолтный ответ, чтобы не было 404 в логах health
    location = / {
      return 204;
    }

    # Страница ошибок (опционально)
    error_page 502 503 504 = /health;
  }
}
